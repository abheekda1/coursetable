query SameCourseOrProfOfferings(
  $seasonCode: String!
  $crn: Int!
  $same_course_id: Int!
  $professor_ids: [String!]
  $hasEval: Boolean!
) {
  self: listings(
    where: { season_code: { _eq: $seasonCode }, crn: { _eq: $crn } }
  ) {
    course {
      description
      requirements
      syllabus_url
      course_professors {
        professor {
          professor_id
          name
        }
      }
      times_by_day
      section
      course_flags {
        flag {
          flag_text
        }
      }
      evaluation_statistic @include(if: $hasEval) {
        enrolled
      }
      last_enrollment @include(if: $hasEval)
      last_enrollment_same_professors @include(if: $hasEval)
      credits
      classnotes
      regnotes
      rp_attr
      final_exam

      same_course_id
    }

    # For searching/testing equality
    season_code
    crn
    course_code
  }
  others: computed_listing_info(
    where: {
      _or: [
        { same_course_id: { _eq: $same_course_id } }
        { professor_ids: { _has_keys_any: $professor_ids } }
      ]
    }
  ) {
    course {
      average_professor_rating @include(if: $hasEval)
      evaluation_statistic @include(if: $hasEval) {
        avg_workload
        avg_rating
      }
    }
    professor_info @include(if: $hasEval)
    professor_names
    syllabus_url

    # All this is needed to navigate to the next class
    season_code
    crn
    title
    course_code
    all_course_codes
    section
    skills
    areas
    extra_info
    description
    times_by_day
    same_course_id
    professor_ids
  }
}

query SearchEvaluationNarratives($season_code: String, $crn: Int) {
  listings(where: { season_code: { _eq: $season_code }, crn: { _eq: $crn } }) {
    course {
      evaluation_narratives {
        comment
        evaluation_question {
          question_text
          tag
        }
      }
      evaluation_ratings {
        rating
        evaluation_question {
          question_text
          options
          tag
        }
      }
      evaluation_statistic {
        enrolled
      }
    }
  }
}
