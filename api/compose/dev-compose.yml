services:
  api:
    ports:
      - '${SECURE_PORT:-3001}:${SECURE_PORT:-3001}'
      - 6499:6499
    volumes:
      - ../static:/usr/src/app/api/static
      - ../src:/usr/src/app/api/src
      - ../drizzle:/usr/src/app/api/drizzle
    environment:
      OVERWRITE_CATALOG: ${OVERWRITE_CATALOG:-'false'}
      HOT_RELOAD: ${HOT_RELOAD:-'true'}

    depends_on:
      db:
        condition: service_healthy
      graphql-engine:
        condition: service_healthy

  graphql-engine:
    container_name: ${GRAPHQL_ENGINE_HOST?graphql-engine}
    image: hasura/graphql-engine:v2.38.1
    ports:
      - 8085:8080
    environment:
      HASURA_GRAPHQL_DATABASE_URL: ${FERRY_POSTGRES_URI?ferry_db}
      HASURA_GRAPHQL_ENABLE_CONSOLE: 'true' # set to "true" to enable console
      HASURA_GRAPHQL_ENABLED_LOG_TYPES: startup, http-log, webhook-log, websocket-log, query-log
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:8080']
      interval: 0.5s
      timeout: 10s
      retries: 60
    networks:
      - api

  redis:
    container_name: ${REDIS_HOST?redis}
    image: redis/redis-stack-server:latest
    volumes:
      - ../redis:/usr/local/etc/redis
      - ../redis/data:/data
    environment:
      - REDIS_ARGS=--save 60 1
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 0.5s
      timeout: 10s
      retries: 60
    networks:
      - api

  # This container is only for dev! The prod container is at coursetable/infra/db
  db:
    container_name: ${DB_HOST?db}
    image: postgres
    ports:
      - 5432:5432
    environment:
      POSTGRES_PASSWORD: ${DB_ROOT_PASSWORD?password}
      POSTGRES_DB: ${DB_NAME?coursetable}
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
      interval: 0.5s
      timeout: 10s
      retries: 60
    volumes:
      - ../postgres/data:/var/lib/postgresql/data
    networks:
      - api

  # This container is only for dev! The prod container is at coursetable/infra/db
  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    ports:
      - 8081:80
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL?pgadmin@coursetable.com}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD?password}
    volumes:
      - ../postgres/pgadmin/servers.json:/pgadmin4/servers.json
    networks:
      - api
